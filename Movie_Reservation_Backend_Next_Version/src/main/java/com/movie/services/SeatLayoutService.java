package com.movie.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.movie.entites.Seat;
import com.movie.entites.SeatLayout;
import com.movie.iservices.ISeatLayoutService;
import com.movie.repositories.SeatLayoutRepository;
import com.movie.utility.SeatCategory;
import com.movie.utility.SeatStatus;

@Service
public class SeatLayoutService implements ISeatLayoutService {

	@Autowired
	private SeatLayoutRepository seatLayoutRepository;

	// Seat Layout generated by default values after movie theater registration 
	@Override
	public SeatLayout createSeatLayout(int numRows, int seatsPerRow) {         
		SeatLayout seatLayout = new SeatLayout();
        seatLayout.setNumRows(numRows);
        seatLayout.setSeatsPerRow(seatsPerRow);
		List<Seat> seats = new ArrayList<>();
		char seatName = 'A';
		for (int row = 1; row <= numRows; row++) {
			for (int col = 1; col <= seatsPerRow; col++) {
				Seat seat = new Seat();
				seat.setRowNumber(row);
				seat.setColNumber(col);
				seat.setSeatName(seatName + "");
				seat.setSeatStatus(SeatStatus.AVAILABLE);
				seat.setSeatCategory(SeatCategory.REGULAR);
				seat.setPrice(0.0);
				seats.add(seat);
			}
			seatName++;
		}
		seatLayout.setSeats(seats);

		return seatLayoutRepository.save(seatLayout);

	}
	// Seat Layout generated after setting the seat category and price by the admin 
	@Override
	public SeatLayout	 updateSeatLayoutCategory( long seatLayoutId, Map<String, String[]> seatCategory) {

	  SeatLayout seatLayout = seatLayoutRepository.findById(seatLayoutId).get();
		List<Seat> seats =  seatLayout.getSeats();
		List<Seat> updatedSeats = seats.stream() // Update Seat Category and price
				.map(seat -> {
					
					String categoryAndPriceArr[] = seatCategory.get(seat.getSeatName()); 
					for(String arr:categoryAndPriceArr)
						System.out.println(arr);
					seat.setSeatCategory(SeatCategory.valueOf(categoryAndPriceArr[0]));
					seat.setPrice(Double.parseDouble(categoryAndPriceArr[1]));
					return seat;
				}) .collect(Collectors.toList());
		
		seatLayout.setSeats(updatedSeats);
      System.out.println(seatLayout);
		return seatLayoutRepository.save(seatLayout); // updating the seat layout 
	}

	@Override
	public SeatLayout getSeatLayout(long seatLayoutId) {
		SeatLayout seatLayout= new SeatLayout();
	    if(seatLayoutRepository.existsById(seatLayoutId))
	    {
	    	  seatLayout = seatLayoutRepository.findById(seatLayoutId).get();
	    }
		return seatLayout;
	}

}
